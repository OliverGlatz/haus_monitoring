data <- data %>% group_by_all %>% do(buildPoly(.$slope, .$intercept, .$above, ranges$x, ranges$y)) %>% unnest
GeomPolygon$draw_panel(data, panel_params, coord)
}
)
geom_section <- function (mapping = NULL, data = NULL, ..., slope, intercept, above,
na.rm = FALSE, show.legend = NA) {
if (missing(mapping) && missing(slope) && missing(intercept) && missing(above)) {
slope <- 1
intercept <- 0
above <- TRUE
}
if (!missing(slope) || !missing(intercept)|| !missing(above)) {
if (missing(slope))
slope <- 1
if (missing(intercept))
intercept <- 0
if (missing(above))
above <- TRUE
data <- data.frame(intercept = intercept, slope = slope, above=above)
mapping <- aes(intercept = intercept, slope = slope, above=above)
show.legend <- FALSE
}
layer(data = data, mapping = mapping, stat = StatIdentity,
geom = GeomSection, position = PositionIdentity, show.legend = show.legend,
inherit.aes = FALSE, params = list(na.rm = na.rm, ...))
}
# load data
df <- read_csv("../ImmoScout24_Inserate.csv", col_types = cols(plz_inserat = col_character(),
grundstück = col_double(), id_inserat = col_character(),
kaltmiete = col_double(), schlafzimmer = col_double(),
warmmiete = col_double(), zimmer = col_double(),
miete_pro_qm = col_double(), kaufpreis_pro_qm = col_double()))
df_root <- df
Links_ImmoScout <- read_delim("../01_Scraper/04_ordner_stammdaten/Links_ImmoScout.csv",
";", escape_double = FALSE, trim_ws = TRUE)
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
tmp %>%
group_by(stadtname) %>%
summarise(miete_pro_qm = median(miete_pro_qm, na.rm = T))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
tmp %>%
group_by(stadtname) %>%
filter(!is.na(miete_pro_qm)) %>%
summarise(miete_pro_qm = median(miete_pro_qm, na.rm = T))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = F))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland")) %>%
ggplot(aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland")) %>%
ggplot(aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=kaufpreis_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
scale_x_continuous(limits = quantile(tmp$kaufpreis_pro_qm, c(0.1, 0.9), na.rm = T)) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c"))+
xlab("Kaufpreis in € pro m²") +
ggtitle(paste0("Durchschnittlicher Kaufpreis pro Quadratmeter in ", params$stadt))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland")) %>%
filter(!is.na(miete_pro_qm))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
tmp <- tmp[is.infinite(rowSums(tmp)),]
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland")) %>%
filter(is.infinite(miete_pro_qm))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland")) %>%
filter(!is.finite()(miete_pro_qm))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland")) %>%
filter(!is.finite(miete_pro_qm))
tmp %>%
group_by(stadtname) %>%
filter(!is.na(miete_pro_qm)) %>%
summarise(miete_pro_qm = median(miete_pro_qm, na.rm = T))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland")) %>%
filter(is.finite(miete_pro_qm))
tmp %>%
group_by(stadtname) %>%
filter(!is.na(miete_pro_qm)) %>%
summarise(miete_pro_qm = median(miete_pro_qm, na.rm = T))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
xlim(0,50)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
xlim(0,25<)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
xlim(0,25)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot() +
xlim(0,30)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
#scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
xlim(0,30)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
#scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
xlim(0,30)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
ggplot(tmp, aes(x=kaufpreis_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
#scale_x_continuous(limits = quantile(tmp$kaufpreis_pro_qm, c(0.1, 0.9), na.rm = T)) +
xlim(0,10000)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c"))+
xlab("Kaufpreis in € pro m²") +
ggtitle(paste0("Durchschnittlicher Kaufpreis pro Quadratmeter in ", params$stadt))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
#scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
xlim(0,35)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
tmp <- df_root %>%
mutate(stadtname = if_else(stadtname == params$stadt, stadtname, "Deutschland"))
ggplot(tmp, aes(x=miete_pro_qm, fill=stadtname)) +
geom_boxplot(outlier.shape = NA) +
#scale_x_continuous(limits = quantile(tmp$miete_pro_qm, c(0.1, 0.9), na.rm = T))+
xlim(0,40)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_fill_manual(values=c("#754449", "#917a7c")) +
xlab("Miete in € pro m²")+
ggtitle(paste0("Durchschnittlicher Mietpreis pro Quadratmeter in ", params$stadt))
df %>%
dplyr::group_by(typ) %>%
dplyr::filter(!is.na(typ)) %>%
summarise(kaufen_qm = median(kaufpreis_pro_qm, na.rm = T),
miete_qm = median(miete_pro_qm, na.rm = T)) %>%
gt() %>%
tab_header(title = paste0("Durchschnittliche Miet- & Kaufpreise je Immobilien-Typ in ", params$stadt),
subtitle = "Je Immobilientyp und unterteilt nach Mieten und Kaufen") %>%
fmt_currency(
columns = kaufen_qm,
currency = "EUR"
)  %>%
fmt_currency(
columns = miete_qm,
currency = "EUR"
) %>%
cols_label(
typ = "Immobilien-Typ",
miete_qm = "Ø Mietpreis pro Quadratmeter",
kaufen_qm = "Ø Kaufpreis pro Quadratmeter")  %>%
summary_rows(
columns = kaufen_qm,
fns = list(
Max = ~max(., na.rm = TRUE),
Min = ~min(., na.rm = TRUE),
Median = ~median(., na.rm = TRUE)
),
formatter = fmt_currency,
currency = "EUR"
) %>%
summary_rows(
columns = miete_qm,
fns = list(
Max = round(~max(., na.rm = TRUE),0),
Min = ~min(., na.rm = TRUE),
Median = ~median(., na.rm = TRUE)
),
formatter = fmt_currency,
currency = "EUR"
)  %>%
tab_footnote(
footnote = "Preis pro Quadratmeter bezogen auf Wohnfläche und somit nicht auf Nutzfläche oder Grundstück",
locations = cells_column_labels(
columns = c(miete_qm,kaufen_qm)
)
) %>%
tab_source_note(
source_note = "Von immobilienscout24.de"
) %>%
tab_style(
style = list(
cell_fill(color = "gray90"),
"font-variant: small-caps;"
),
locations = cells_body(columns = miete_qm)
) %>%
tab_style(
style = list(
cell_fill(color = "gray70"),
"font-variant: small-caps;"
),
locations = cells_body(columns = kaufen_qm)
)
df %>%
dplyr::group_by(typ) %>%
dplyr::filter(!is.na(typ)) %>%
summarise(kaufen_qm = median(kaufpreis_pro_qm, na.rm = T),
miete_qm = median(miete_pro_qm, na.rm = T)) %>%
gt() %>%
tab_header(title = paste0("Durchschnittliche Miet- & Kaufpreise je Immobilien-Typ in ", params$stadt),
subtitle = "Je Immobilientyp und unterteilt nach Mieten und Kaufen") %>%
fmt_currency(
columns = kaufen_qm,
currency = "EUR"
)  %>%
fmt_currency(
columns = miete_qm,
currency = "EUR"
) %>%
cols_label(
typ = "Immobilien-Typ",
miete_qm = "Ø Mietpreis pro Quadratmeter",
kaufen_qm = "Ø Kaufpreis pro Quadratmeter")  %>%
summary_rows(
columns = kaufen_qm,
fns = list(
Max = ~max(., na.rm = TRUE),
Min = ~min(., na.rm = TRUE),
Median = ~median(., na.rm = TRUE)
),
formatter = fmt_currency,
currency = "EUR"
) %>%
summary_rows(
columns = miete_qm,
fns = list(
Max = ~max(., na.rm = TRUE),
Min = ~min(., na.rm = TRUE),
Median = ~median(., na.rm = TRUE)
),
formatter = fmt_currency,
currency = "EUR",
decimals = 0
)  %>%
tab_footnote(
footnote = "Preis pro Quadratmeter bezogen auf Wohnfläche und somit nicht auf Nutzfläche oder Grundstück",
locations = cells_column_labels(
columns = c(miete_qm,kaufen_qm)
)
) %>%
tab_source_note(
source_note = "Von immobilienscout24.de"
) %>%
tab_style(
style = list(
cell_fill(color = "gray90"),
"font-variant: small-caps;"
),
locations = cells_body(columns = miete_qm)
) %>%
tab_style(
style = list(
cell_fill(color = "gray70"),
"font-variant: small-caps;"
),
locations = cells_body(columns = kaufen_qm)
)
# set options
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# load packages
library(tidyverse)
library(ggplot2)
library(raster)
library(mapproj)
library(scales)
library(gt)
library(plotly)
library(leaflet)
library(DT)
library(ggrepel)
# load functions
buildPoly <- function(slope, intercept, above, xr, yr){
# By Joran Elias, @joran https://stackoverflow.com/a/6809174/1870254
#Find where the line crosses the plot edges
yCross <- (yr - intercept) / slope
xCross <- (slope * xr) + intercept
#Build polygon by cases
if (above & (slope >= 0)){
rs <- data.frame(x=-Inf,y=Inf)
if (xCross[1] < yr[1]){
rs <- rbind(rs,c(-Inf,-Inf),c(yCross[1],-Inf))
}
else{
rs <- rbind(rs,c(-Inf,xCross[1]))
}
if (xCross[2] < yr[2]){
rs <- rbind(rs,c(Inf,xCross[2]),c(Inf,Inf))
}
else{
rs <- rbind(rs,c(yCross[2],Inf))
}
}
if (!above & (slope >= 0)){
rs <- data.frame(x= Inf,y= -Inf)
if (xCross[1] > yr[1]){
rs <- rbind(rs,c(-Inf,-Inf),c(-Inf,xCross[1]))
}
else{
rs <- rbind(rs,c(yCross[1],-Inf))
}
if (xCross[2] > yr[2]){
rs <- rbind(rs,c(yCross[2],Inf),c(Inf,Inf))
}
else{
rs <- rbind(rs,c(Inf,xCross[2]))
}
}
if (above & (slope < 0)){
rs <- data.frame(x=Inf,y=Inf)
if (xCross[1] < yr[2]){
rs <- rbind(rs,c(-Inf,Inf),c(-Inf,xCross[1]))
}
else{
rs <- rbind(rs,c(yCross[2],Inf))
}
if (xCross[2] < yr[1]){
rs <- rbind(rs,c(yCross[1],-Inf),c(Inf,-Inf))
}
else{
rs <- rbind(rs,c(Inf,xCross[2]))
}
}
if (!above & (slope < 0)){
rs <- data.frame(x= -Inf,y= -Inf)
if (xCross[1] > yr[2]){
rs <- rbind(rs,c(-Inf,Inf),c(yCross[2],Inf))
}
else{
rs <- rbind(rs,c(-Inf,xCross[1]))
}
if (xCross[2] > yr[1]){
rs <- rbind(rs,c(Inf,xCross[2]),c(Inf,-Inf))
}
else{
rs <- rbind(rs,c(yCross[1],-Inf))
}
}
return(rs)
}
GeomSection <- ggproto("GeomSection", GeomPolygon,
default_aes = list(fill="blue", size=0, alpha=0.2, colour=NA, linetype="dashed"),
required_aes = c("slope", "intercept", "above"),
draw_panel = function(data, panel_params, coord) {
ranges <- coord$backtransform_range(panel_params)
data$group <- seq_len(nrow(data))
data <- data %>% group_by_all %>% do(buildPoly(.$slope, .$intercept, .$above, ranges$x, ranges$y)) %>% unnest
GeomPolygon$draw_panel(data, panel_params, coord)
}
)
geom_section <- function (mapping = NULL, data = NULL, ..., slope, intercept, above,
na.rm = FALSE, show.legend = NA) {
if (missing(mapping) && missing(slope) && missing(intercept) && missing(above)) {
slope <- 1
intercept <- 0
above <- TRUE
}
if (!missing(slope) || !missing(intercept)|| !missing(above)) {
if (missing(slope))
slope <- 1
if (missing(intercept))
intercept <- 0
if (missing(above))
above <- TRUE
data <- data.frame(intercept = intercept, slope = slope, above=above)
mapping <- aes(intercept = intercept, slope = slope, above=above)
show.legend <- FALSE
}
layer(data = data, mapping = mapping, stat = StatIdentity,
geom = GeomSection, position = PositionIdentity, show.legend = show.legend,
inherit.aes = FALSE, params = list(na.rm = na.rm, ...))
}
# load data
df <- read_csv("../ImmoScout24_Inserate.csv", col_types = cols(plz_inserat = col_character(),
grundstück = col_double(), id_inserat = col_character(),
kaltmiete = col_double(), schlafzimmer = col_double(),
warmmiete = col_double(), zimmer = col_double(),
miete_pro_qm = col_double(), kaufpreis_pro_qm = col_double()))
df_root <- df
Links_ImmoScout <- read_delim("../01_Scraper/04_ordner_stammdaten/Links_ImmoScout.csv",
";", escape_double = FALSE, trim_ws = TRUE)
