"0","# set options"
"0","knitr::opts_chunk$set(echo = TRUE)"
"0","options(scipen=999) "
"0",""
"0","# load packages"
"0","library(tidyverse)"
"0","library(ggplot2)"
"0","library(raster)"
"0","library(mapproj)"
"0","library(scales)"
"0","library(gt)"
"0","library(plotly)"
"0","library(leaflet)"
"0","library(DT)"
"0","library(ggrepel)"
"0",""
"0","# load functions"
"0","buildPoly <- function(slope, intercept, above, xr, yr){"
"0","  # By Joran Elias, @joran https://stackoverflow.com/a/6809174/1870254"
"0","  #Find where the line crosses the plot edges"
"0","  yCross <- (yr - intercept) / slope"
"0","  xCross <- (slope * xr) + intercept"
"0","  "
"0","  #Build polygon by cases"
"0","  if (above & (slope >= 0)){"
"0","    rs <- data.frame(x=-Inf,y=Inf)"
"0","    if (xCross[1] < yr[1]){"
"0","      rs <- rbind(rs,c(-Inf,-Inf),c(yCross[1],-Inf))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(-Inf,xCross[1]))"
"0","    }"
"0","    if (xCross[2] < yr[2]){"
"0","      rs <- rbind(rs,c(Inf,xCross[2]),c(Inf,Inf))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(yCross[2],Inf))"
"0","    }"
"0","  }"
"0","  if (!above & (slope >= 0)){"
"0","    rs <- data.frame(x= Inf,y= -Inf)"
"0","    if (xCross[1] > yr[1]){"
"0","      rs <- rbind(rs,c(-Inf,-Inf),c(-Inf,xCross[1]))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(yCross[1],-Inf))"
"0","    }"
"0","    if (xCross[2] > yr[2]){"
"0","      rs <- rbind(rs,c(yCross[2],Inf),c(Inf,Inf))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(Inf,xCross[2]))"
"0","    }"
"0","  }"
"0","  if (above & (slope < 0)){"
"0","    rs <- data.frame(x=Inf,y=Inf)"
"0","    if (xCross[1] < yr[2]){"
"0","      rs <- rbind(rs,c(-Inf,Inf),c(-Inf,xCross[1]))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(yCross[2],Inf))"
"0","    }"
"0","    if (xCross[2] < yr[1]){"
"0","      rs <- rbind(rs,c(yCross[1],-Inf),c(Inf,-Inf))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(Inf,xCross[2]))"
"0","    }"
"0","  }"
"0","  if (!above & (slope < 0)){"
"0","    rs <- data.frame(x= -Inf,y= -Inf)"
"0","    if (xCross[1] > yr[2]){"
"0","      rs <- rbind(rs,c(-Inf,Inf),c(yCross[2],Inf))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(-Inf,xCross[1]))"
"0","    }"
"0","    if (xCross[2] > yr[1]){"
"0","      rs <- rbind(rs,c(Inf,xCross[2]),c(Inf,-Inf))"
"0","    }"
"0","    else{"
"0","      rs <- rbind(rs,c(yCross[1],-Inf))"
"0","    }"
"0","  }"
"0","  return(rs)"
"0","}"
"0",""
"0",""
"0","GeomSection <- ggproto(""GeomSection"", GeomPolygon, "
"0","                       default_aes = list(fill=""blue"", size=0, alpha=0.2, colour=NA, linetype=""dashed""), "
"0","                       required_aes = c(""slope"", ""intercept"", ""above""),"
"0","                       draw_panel = function(data, panel_params, coord) {"
"0","                         ranges <- coord$backtransform_range(panel_params)"
"0","                         data$group <- seq_len(nrow(data))"
"0","                         data <- data %>% group_by_all %>% do(buildPoly(.$slope, .$intercept, .$above, ranges$x, ranges$y)) %>% unnest"
"0","                         GeomPolygon$draw_panel(data, panel_params, coord)"
"0","                       }"
"0",")"
"0",""
"0","geom_section <- function (mapping = NULL, data = NULL, ..., slope, intercept, above, "
"0","                          na.rm = FALSE, show.legend = NA) {"
"0","  if (missing(mapping) && missing(slope) && missing(intercept) && missing(above)) {"
"0","    slope <- 1"
"0","    intercept <- 0"
"0","    above <- TRUE"
"0","  }"
"0","  if (!missing(slope) || !missing(intercept)|| !missing(above)) {"
"0","    if (missing(slope)) "
"0","      slope <- 1"
"0","    if (missing(intercept)) "
"0","      intercept <- 0"
"0","    if (missing(above)) "
"0","      above <- TRUE"
"0","    data <- data.frame(intercept = intercept, slope = slope, above=above)"
"0","    mapping <- aes(intercept = intercept, slope = slope, above=above)"
"0","    show.legend <- FALSE"
"0","  }"
"0","  layer(data = data, mapping = mapping, stat = StatIdentity, "
"0","        geom = GeomSection, position = PositionIdentity, show.legend = show.legend, "
"0","        inherit.aes = FALSE, params = list(na.rm = na.rm, ...))"
"0","}"
"0",""
"0",""
"0","# load data"
"0","df <- read_csv(""../ImmoScout24_Inserate.csv"", col_types = cols(plz_inserat = col_character(),  "
"0","                                                            grundstÃ¼ck = col_double(), id_inserat = col_character(), "
"0","                                                            kaltmiete = col_double(), schlafzimmer = col_double(), "
"0","                                                            warmmiete = col_double(), zimmer = col_double(),"
"0","                                                            miete_pro_qm = col_double(), kaufpreis_pro_qm = col_double()))"
"0","df_root <- df"
"0",""
"0","Links_ImmoScout <- read_delim(""../01_Scraper/04_ordner_stammdaten/Links_ImmoScout.csv"", "
"0","                              "";"", escape_double = FALSE, trim_ws = TRUE)"
"2","
[36mâ”€â”€[39m [1m[1mColumn specification[1m[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
cols(
  stadtname = [31mcol_character()[39m,
  url_stadt = [31mcol_character()[39m,
  max_page = [32mcol_double()[39m
)

"
